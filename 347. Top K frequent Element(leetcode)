class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        unordered_map<int,int>mp;
        for(int i=0;i<nums.size();i++){
            mp[nums[i]]++;
        }
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pro;
        for(auto x:mp){
            pro.push(make_pair(x.second,x.first));
            if(pro.size()>k){
                pro.pop();
            }
        }
        vector<int>vec;
        while(!pro.empty()){
            pair<int,int> temp=pro.top();
            pro.pop();
            vec.push_back(temp.second);
        }
        return vec;
    }
};
